---
# Main list of tasks to be executed.
#
#   Fail the play if it runs on an unsupported platform.
- name: Assert platform is supported
  tags: tomcat
  assert:
    that:
      - ansible_os_family in tomcat_supported_platforms
      - ansible_distribution in tomcat_supported_distributions


- name: Load version vars
  tags: tomcat
  with_first_found:
    - ../vars/versions/{{ tomcat_version }}.yml
    - ../vars/versions/default.yml
  include_vars: "{{ item }}"

- name: Assert version vars
  tags: tomcat
  assert:
    that:
      - tomcat_redis_sha256sum not in (None, "")



- name: Include util get/put instructions
  tags: tomcat
  include: util.yml


- name: Create Tomcat group
  tags: tomcat
  become: yes
  group:
    state=present
    name={{ tomcat_user_group }}

- name: Create Tomcat user
  tags: tomcat
  become: yes
  user:
    state=present
    name={{ tomcat_user_name }}
    home={{ tomcat_user_home }}
    group={{ tomcat_user_group }}
    createhome=yes
    comment="Tomcat service user"


- name: Install catalina home directory
  tags: tomcat
  become: yes
  file:
    state=directory
    dest={{ tomcat_env_catalina_home }}
    owner=0
    group=0
    mode=0755

- name: Extract Tomcat installation files to catalina home
  tags: tomcat
  become: yes
  command: tar
      -xzf {{ util_persistent_data_path_remote }}/{{ tomcat_redis_filename }}
      -C {{ tomcat_env_catalina_home }}
      --strip-components 1
    creates={{ tomcat_env_catalina_home }}/lib


- name: Install catalina base directory and sub dirs
  tags: tomcat
  become: yes
  with_items:
    - conf
    - logs
    - webapps
    - temp
  file:
    state=directory
    dest={{ tomcat_env_catalina_base }}/{{ item }}
    owner={{ tomcat_user_name }}
    group={{ tomcat_user_group }}
    mode=0755

- name: Register conf files to be installed
  tags: tomcat
  register: tomcat_conf_files
  changed_when: false
  command: ls -1 --ignore=server.xml {{ tomcat_env_catalina_home }}/conf

- name: Install conf files
  tags: tomcat
  become: yes
  with_items: tomcat_conf_files.stdout_lines
  command: install
      --owner {{ tomcat_user_name }}
      --group {{ tomcat_user_group }}
      --mode 0640
      {{ tomcat_env_catalina_home }}/conf/{{ item }}
      {{ tomcat_env_catalina_base }}/conf/{{ item }}
    creates={{ tomcat_env_catalina_base }}/conf/{{ item }}


- name: Install server configuration
  tags: tomcat
  become: yes
  template:
    src={{ tomcat_server_xml_template }}
    dest={{ tomcat_env_catalina_base }}/conf/server.xml
    owner={{ tomcat_user_name }}
    group={{ tomcat_user_group }}
    mode=0640


- name: Configure service management
  tags: tomcat
  include_vars: "service/{{ ansible_local['util']['init']['system'] }}.yml"


- name: Install local tomcat facts
  tags: tomcat
  become: yes
  register: tomcat_registered_install_local_tomcat_facts
  template:
    src=facts.j2
    dest=/etc/ansible/facts.d/tomcat.fact
    owner=0
    group=0
    mode=0644

- name: Re-read local facts
  tags: tomcat
  when: tomcat_registered_install_local_tomcat_facts.changed
  setup:
    filter=ansible_local


- name: Install tomcat service
  tags: tomcat
  become: yes
  register: registered_tomcat_install_tomcat_service
  template:
    src={{ tomcat_service_template|default(tomcat_service_template_default) }}
    dest={{ tomcat_service_file_dest }}
    owner=0
    group=0
    mode={{ tomcat_service_file_mode }}

- name: Reload systemd
  tags: tomcat
  when: registered_tomcat_install_tomcat_service.changed and ansible_local.util.init.system == 'systemd'
  become: yes
  failed_when: false
  changed_when: false
  command: systemctl daemon-reload

- name: Ensure tomcat service
  tags: tomcat
  become: yes
  service:
    state=started
    enabled=true
    name={{ tomcat_service_name }}
