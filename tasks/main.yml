---
# Main list of tasks to be executed.
#
#   Fail the play if it runs on an unsupported platform.
- name: Assert platform is supported
  tags: tomcat
  assert:
    that:
      - ansible_os_family in ['Archlinux', 'Debian', 'RedHat', 'Suse']


- include: local.yml
  tags: tomcat


- name: Install remote ansible data path directory
  tags: tomcat
  file:
    state=directory
    dest={{ remote_ansible_data_path }}


- name: Create Tomcat group
  tags: tomcat
  group:
    state=present
    name={{ tomcat_group }}

- name: Create Tomcat user
  tags: tomcat
  user:
    state=present
    name={{ tomcat_user }}
    home={{ tomcat_home }}
    group={{ tomcat_group }}
    createhome=yes
    comment="Tomcat service user"


- name: Install Tomcat base directory
  tags: tomcat
  file:
    state=directory
    dest={{ tomcat_base }}
    mode=0755
    owner={{ tomcat_user }}
    group={{ tomcat_group }}


- name: Copy Tomcat distribution
  tags: tomcat
  copy:
    src={{ local_ansible_data_path }}/{{ tomcat_redis_filename }}
    dest={{ remote_ansible_data_path }}/{{ tomcat_redis_filename }}
    owner=0
    group=0
    mode=0644


- name: Install Tomcat
  tags: tomcat
  unarchive:
    src={{ remote_ansible_data_path }}/{{ tomcat_redis_filename }}
    dest={{ tomcat_base }}
    copy=false
    creates={{ tomcat_base }}/apache-tomcat-{{ tomcat_version }}


# Tomcat... Another software from the Java world which doesn't have any
#   operating system specific design for separation of concerns, like
#   it's completely okay to write temporary and working data into the
#   installation root of the software.
- name: Hack a usable catalina environment (folders)
  tags: tomcat
  sudo: yes
  sudo_user: "{{ tomcat_user }}"
  when: tomcat_home != tomcat_base
  with_items:
    - conf
    - logs
    - temp
    - webapps
    - work
  file:
    state=directory
    dest={{ tomcat_home }}/catalina/{{ item }}
    mode=0755
    owner={{ tomcat_user }}
    group={{ tomcat_group }}

- name: Hack a usable catalina environment (symlinks)
  tags: tomcat
  sudo: yes
  sudo_user: "{{ tomcat_user }}"
  when: tomcat_home != tomcat_base
  with_items:
    - bin
    - lib
  file:
    state=link
    force=yes
    src={{ tomcat_base }}/apache-tomcat-{{ tomcat_version }}/{{ item }}
    dest={{ tomcat_home }}/catalina/{{ item }}

- name: Hack a usable catalina environment (conf)
  tags: tomcat
  when: tomcat_home != tomcat_base
  with_items:
    - catalina.policy
    - catalina.properties
    - context.xml
    - logging.properties
    - server.xml
    - tomcat-users.xml
    - web.xml
  command:
    install
      --owner {{ tomcat_user }}
      --group {{ tomcat_group }}
      --mode 0644
      {{ tomcat_base }}/apache-tomcat-{{ tomcat_version }}/conf/{{ item }}
      {{ tomcat_home }}/catalina/conf/{{ item }}


# Install a tomcat service
- include: service_systemd.yml
  tags: tomcat
  when: ansible_distribution == 'Archlinux'

- include: service_upstart.yml
  tags: tomcat
  when: ansible_distribution == 'Ubuntu'

- include: service_sysvinit.yml
  tags: tomcat
  when: ansible_distribution == 'Debian' or ansible_os_family == 'RedHat'
